name: semantic_release

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  deploy:
    if: github.repository == 'alandtse/fallout_vr_address_library'
    runs-on: ubuntu-latest
    environment: Publishing

    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
          token: ${{ secrets.GH_TOKEN }}
      - name: Set up Python 3.9
        uses: actions/setup-python@v2
        with:
          python-version: 3.9
      #----------------------------------------------
      #  -----  install & configure poetry  -----
      #----------------------------------------------
      - name: Install Poetry
        uses: snok/install-poetry@v1
        with:
          virtualenvs-create: true
          virtualenvs-in-project: true
          installer-parallel: true
      #----------------------------------------------
      #       load cached venv if cache exists
      #----------------------------------------------
      - name: Load cached venv
        id: cached-poetry-dependencies
        uses: actions/cache@v2
        with:
          path: .venv
          key: venv-${{ runner.os }}-${{ steps.setup-python.outputs.python-version }}-${{ hashFiles('**/poetry.lock') }}
      #----------------------------------------------
      # install dependencies if cache does not exist
      #----------------------------------------------
      - name: Install dependencies
        if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'
        run: poetry install --no-interaction --no-root
      #----------------------------------------------
      # install your root project, if required
      #----------------------------------------------
      - name: Install library
        run: poetry install --no-interaction
      - name: Setup Git
        run: |
          git config --global user.name "semantic-release"
          git config --global user.email "semantic-release@GitHub"
      - name: Set old version variable
        run: |
          echo "old_version=`git describe --abbrev=0`" >> $GITHUB_ENV
      - name: Set changelog variable
        run: |
          echo "changelog=`poetry run semantic-release changelog`" >> $GITHUB_ENV
      - name: Print variables
        env:
          version: ${{ env.release_version }}
          changelog: ${{ env.changelog }}
        run: |
          echo $old_version
          echo $changelog
      - name: Python Semantic Release
        uses: relekang/python-semantic-release@master
        with:
          github_token: ${{ secrets.GH_TOKEN }}
      - name: Set release variable
        run: |
          echo "release_version=`git describe --abbrev=0`" >> $GITHUB_ENV
          echo $release_version
      - name: Generate release csv
        if: ${{ env.old_version != env.release_version }}
        run: |
          mkdir -p release/F4SE/Plugins
          poetry run ./vr_address_tools.py release/F4SE/Plugins/ generate -rv ${{ env.release_version }}
      - name: Create .7z
        if: ${{ env.old_version != env.release_version }}
        uses: edgarrc/action-7z@v1
        with:
          args: 7z a -t7z -mx=9 vr_addresslib-${{ env.release_version }}.7z ./release/F4SE
      - name: Sleep
        # add delay so upload does not kill the release notes from semantic-release
        if: ${{ env.old_version != env.release_version }}
        run: |
          sleep 5
      - name: Upload zip to release
        if: ${{ env.old_version != env.release_version }}
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GH_TOKEN }}
          file: vr_addresslib-${{ env.release_version }}.7z
          asset_name: vr_addresslib-${{ env.release_version }}.7z
          tag: ${{ env.release_version }}
          overwrite: true
      - name: Setup Dotnet
        if: ${{ env.old_version != env.release_version }}
        uses: actions/setup-dotnet@v2
        with:
          dotnet-version: '3.1.x'
          include-prerelease: false
      - name: Download NexusUploader
        if: ${{ env.old_version != env.release_version }}
        run: dotnet tool install -g NexusUploader
      - name: Upload files to Nexus
      # https://github.com/agc93/nexus-uploader
        if: ${{ env.old_version != env.release_version }}
        env:
          UNEX_COOKIES: ${{ secrets.UNEX_COOKIES }}
          UNEX_APIKEY: ${{ secrets.UNEX_APIKEY }}
          UNEX_FILEDESCRIPTION: https://github.com/alandtse/fallout_vr_address_library/compare/${{ env.old_version }}...${{ env.release_version }}
          UNEX_MODID: 64879
          UNEX_GAME: fallout4
          UNEX_FILENAME: VR Address Library
          UNEX_PREVIOUSFILE: "auto"
          file: vr_addresslib-${{ env.release_version }}.7z
          version: ${{ env.release_version }}
          changelog: ${{ env.changelog }}
        run: |
          unex upload $UNEX_MODID $file -v $version
          unex changelog $version "$changelog"
